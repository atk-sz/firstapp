{"version":3,"sources":["components/cards/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","console","log","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","changeHandle","type","onChange","App","e","setState","searchField","target","value","state","a","axios","get","res","data","getUsers","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAAAC,GAEhB,OADAC,QAAQC,WAAWF,GAEnB,sBAAKG,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAAMK,QAAQC,GAAxC,0BAAoEC,IAAKP,EAAMK,QAAQG,OAC/F,mCAAMR,EAAMK,QAAQG,KAApB,OACA,4BAAIR,EAAMK,QAAQI,YCLbC,G,MAAW,SAAAV,GAEpB,OACI,qBAAKG,UAAU,YAAf,SACKH,EAAMW,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNtBO,G,MAAY,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAcC,EAAkB,EAAlBA,aACrC,OACI,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,M,iBCuCrEG,G,wDArCb,aAAe,IAAD,8BACZ,gBAoBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SApBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,QAIJ,uCAAG,4BAAAI,EAAA,+EAEKC,IAAMC,IAAI,8CAFf,OAEPC,EAFO,OAGb,EAAKR,SAAS,CAAET,SAAUiB,EAAIC,OAHjB,gDAKb5B,QAAQC,IAAI,YALC,yDAAH,qDAQd4B,K,oBAKF,WAAU,IAAD,EAC0BC,KAAKP,MAA9Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZW,EAAiBrB,EAASsB,QAAQ,SAAA5B,GAAO,OAAMA,EAAQG,KAAK0B,cAAcC,SAASd,EAAYa,kBACrG,OACE,sBAAK/B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAegB,KAAKhB,eAC5D,cAAC,EAAD,CAAUJ,SAAUqB,W,GAhCVI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b7a9fd28.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.style.css'\r\n\r\nexport const Card = props=>{\r\n    console.log(typeof(props))\r\n    return(\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt={props.monster.name}/>\r\n        <h2> {props.monster.name} </h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Card } from \"../cards/card.component\";\r\nimport './card-list.style.css'\r\n\r\nexport const CardList = props => {\r\n    // console.log(props)\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n// export default CardList;","import React from \"react\";\r\nimport \"./search-box.style.css\";\r\n\r\nexport const SearchBox = ({placeholder , changeHandle}) => {\r\n    return (\r\n        <input className='search' type='search' placeholder={placeholder} onChange={changeHandle} />\r\n    )\r\n}","import React, { Component } from 'react';\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\"\nimport axios from \"axios\";\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [ ],\n      searchField: \"\"\n    }\n  }\n  componentDidMount() {\n    // fetch('https://jsonplaceholder.typicode.com/users')\n    // .then( res => res.json())\n    // .then( users => console.log(users))\n    const getUsers = async () => {\n      try {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n        this.setState({ monsters: res.data })\n      } catch (e) {\n        console.log(\"some err\")\n      }\n    }\n    getUsers();\n  }\n  changeHandle = e =>{\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n    const { monsters, searchField} = this.state;\n    const filterMonsters = monsters.filter( monster => ( monster.name.toLowerCase().includes(searchField.toLowerCase())))\n    return (\n      <div className='App'>\n        <h1> Monsters Rolodex</h1>\n        <SearchBox placeholder='search monster' changeHandle={ this.changeHandle }/>\n        <CardList monsters={filterMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}